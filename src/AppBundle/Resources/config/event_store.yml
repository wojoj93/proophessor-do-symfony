prooph_event_store:
  stores:
    kudo_store:
      event_store: '%open_kudo.event_store.class%'
      repositories:
        thank_you_list:
          repository_class: '\OpenKudo\Domain\Infrastructure\Repository\EventStoreThankYouList'
          aggregate_type: 'OpenKudo\Domain\Model\Kudo\ThankYou'
          aggregate_translator: 'prooph_event_sourcing.aggregate_translator'
        person_list:
          repository_class: '\OpenKudo\Domain\Infrastructure\Repository\EventStorePersonList'
          aggregate_type: 'OpenKudo\Domain\Model\Person\Person'
          aggregate_translator: 'prooph_event_sourcing.aggregate_translator'
  projection_managers:
    kudo_projection_manager:
      event_store: '%open_kudo.event_store.class%'
      connection: 'doctrine.pdo.connection'
      projections:
        thank_you_projection:
          read_model: OpenKudo\Domain\Projection\Kudo\ThankYouReadModel
          projection: OpenKudo\Domain\Projection\Kudo\ThankYouProjection
        person_projection:
          read_model: OpenKudo\Domain\Projection\Person\PersonReadModel
          projection: OpenKudo\Domain\Projection\Person\PersonProjection

services:
  Prooph\EventStore\Pdo\PostgresEventStore:
    arguments: ['@prooph_event_store.message_factory', '@doctrine.pdo.connection', '@prooph_event_store.single_stream_strategy']

  doctrine.pdo.connection:
    class: PDO
    factory: ['@database_connection', getWrappedConnection]

  prooph_event_store.single_stream_strategy:
    class: Prooph\EventStore\Pdo\PersistenceStrategy\PostgresSingleStreamStrategy

  prooph_event_sourcing.aggregate_translator:
    class: Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator

  'prooph_event_store_bus_bridge.thank_you_event_publisher':
    class: Prooph\EventStoreBusBridge\EventPublisher
    arguments: ['@prooph_service_bus.kudo_event_bus']
    tags:
      - { name: 'prooph_event_store.kudo_store.plugin' }